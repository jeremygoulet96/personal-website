/**
 * -----------------
 * TABLE OF CONTENTS
 * -----------------
 * LIB -------------
 ** Normalize
 * UTILITIES
 ** Mixins
 ** Colors
 ** Variables
 ** Media Queries
 ** Icons
 * BASE ------------
 ** Typo
 ** Button
 ** Form
 * MODULES ---------
 ** Nav
 ** Header
 ** Footer
 ** List
 ** About me
 ** Blog
 * GENERAL ---------
 ** Base
 ** Text
 */
/****** LIB ******/
/****** UTILITIES ******/
/**
 * --------------------------
 * TABLE OF CONTENTS - MIXINS
 * --------------------------
 * Base (BoxSizing, Clearfix)
 * Accessibility
 * Typography
 */
/******** Base (BoxSizing, Clearfix) *********/
/******** Accessibility *********/
/******** Typography *********/
/****** COLORS ******/
/****** MEDIA QUERIES ******/
/****** VARIABLES ******/
a.icon {
  display: block;
  font-size: 0;
  background: center no-repeat;
}

a.icon--hamburger {
  background-image: url(../images/icons/hamburger.svg);
}

a.icon--close {
  background-image: url(../images/icons/close.svg);
}

svg.icon {
  display: block;
}

svg.icon--twitter:hover {
  fill: #00AAEC;
}

svg.icon--dribbble:hover {
  fill: #EC4989;
}

svg.icon--github:hover {
  fill: #3E75C3;
}

svg.icon--instagram:hover {
  fill: #EF307C;
}

svg.icon--linkedin:hover {
  fill: #007EBB;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.loadAnimated {
  opacity: 0;
  animation: fade-in ease 0.75s;
  animation-fill-mode: forwards;
}

/****** BASE ******/
/****** TYPOGRAPHY ******/
@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Italic.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Italic.woff") format("woff");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Medium.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Bold.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-ExtraBold.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-ExtraBold.woff") format("woff");
  font-weight: 800;
  font-style: normal;
}

/****** BUTTONS ******/
.button {
  display: inline-block;
  position: relative;
  padding: 1rem 0;
  box-shadow: inset 0 0 0 2px #252525;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  border: 0;
  font-weight: bold;
  font-size: 1rem;
  text-align: center;
  margin-bottom: 1rem;
  flex-grow: 1;
  flex-basis: 40%;
  cursor: pointer;
  outline: 0;
  transition: all 0.2s ease;
}

.button:hover:before, .button:focus:before {
  box-shadow: inset 0 0 0 2px #252525;
  transform: none;
}

.button:active {
  transform: scale(0.95);
}

.button:active:before {
  box-shadow: inset 0 0 0 2px #252525;
  transform: none;
}

.button:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  background-color: #843AF9;
  width: 100%;
  height: 100%;
  z-index: -2;
  transform: translateX(-4px) translateY(4px);
  transition: all 0.2s ease;
}

a.button:nth-child(even) {
  margin-left: 1rem;
}

/****** FORM ******/
form.form {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

form.form label.form__label {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

form.form label.form__label.focusable:active, form.form label.form__label.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

form.form div.inputContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

form.form div.inputContainer input.form__input:nth-of-type(1), form.form div.inputContainer textarea:nth-of-type(1) {
  margin-right: 0.5rem;
}

form.form input.form__input, form.form textarea {
  width: 100%;
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  display: inline-block;
  background: #fff;
  border-radius: 7px;
  padding: 1rem;
  box-shadow: inset 0 2px 2px 0 rgba(0, 0, 0, 0.1);
  border: 1px solid #C8C8C8;
  color: #252525;
  font-weight: 500;
  font-size: 1rem;
  margin-bottom: 0.5rem;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  transition: all 0.2s ease;
}

form.form input.form__input:focus, form.form textarea:focus {
  border-color: #53BCFF;
  box-shadow: inset 0 2px 2px 0 rgba(83, 188, 255, 0.3);
}

form.form textarea {
  min-height: 100px;
}

form.form ::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: #9A9A9A;
}

form.form ::-moz-placeholder {
  /* Firefox 19+ */
  color: #9A9A9A;
}

form.form :-ms-input-placeholder {
  /* IE 10+ */
  color: #9A9A9A;
}

form.form :-moz-placeholder {
  /* Firefox 18- */
  color: #9A9A9A;
}

/****** MODULES ******/
/****** NAV ******/
nav.nav {
  padding: 1.2rem 0;
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
  width: 100%;
  overflow: hidden;
  transition: all 0.2s ease;
}

@media (min-width: 1080px) {
  nav.nav {
    width: auto;
  }
}

nav.nav ul.nav__list {
  display: flex;
  justify-content: space-between;
  transition: all 0.2s ease;
}

nav.nav ul.nav__list div.nav__languages a.nav__link:first-child {
  margin-right: 1rem;
}

nav.nav ul.nav__list div.nav__languages:before {
  content: "|";
  display: inline-block;
  margin-right: 1rem;
}

nav.nav ul.nav__list .nav__link {
  color: #252525;
  text-decoration: none;
  transition: all 0.2s ease;
}

nav.nav ul.nav__list .nav__link--lang {
  background: none;
  box-shadow: none;
  border: 0;
  font-size: 1rem;
  outline: 0;
}

nav.nav ul.nav__list .nav__link--lang:hover {
  cursor: pointer;
}

nav.nav ul.nav__list .nav__link--active {
  font-weight: 600;
  text-decoration: underline;
}

nav.nav ul.nav__list .nav__link:hover {
  opacity: 0.5;
}

/****** HEADER ******/
header.header {
  width: 100%;
  top: 0;
  padding: 0 1.5rem;
  transition: all 0.2s ease;
  z-index: 999;
  position: fixed;
}

header.header.header--inTransition {
  background-color: #fff;
}

header.header.header--inTransition div.headerContainer {
  padding: 1rem 0;
}

header.header .maxWidth {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

@media (min-width: 1080px) {
  header.header .maxWidth {
    flex-wrap: nowrap;
  }
}

header.header.opened {
  box-shadow: 0 12px 25px 0 rgba(0, 0, 0, 0.1);
  background-color: #fff;
}

header.header.opened div.headerContainer {
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
}

header.header.opened nav.nav {
  height: auto;
  padding: 1rem 0;
  box-shadow: none;
}

header.header.opened nav.nav ul.nav__list {
  opacity: 1;
}

header.header div.headerContainer {
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  transition: all 0.2s ease;
  padding: 1.5rem 0;
}

@media (min-width: 1080px) {
  header.header div.headerContainer {
    width: auto;
    padding: 2rem 0;
  }
  header.header div.headerContainer a.header__action {
    display: none;
  }
}

header.header div.headerContainer a.header__logo {
  display: block;
  text-decoration: none;
  color: #252525;
  font-size: 1.3rem;
  font-weight: 600;
  transition: all 0.2s ease;
}

header.header div.headerContainer a.header__logo:hover {
  opacity: 0.5;
}

header.header div.headerContainer a.header__action {
  width: 22px;
  height: 22px;
}

header.header nav.nav {
  height: 0;
  padding: 0 1rem;
}

header.header nav.nav ul.nav__list {
  opacity: 0;
}

@media (min-width: 1080px) {
  header.header nav.nav {
    height: auto;
    padding: 0;
    box-shadow: none;
  }
  header.header nav.nav ul.nav__list {
    opacity: 1;
  }
  header.header nav.nav li.nav__item:not(:last-child) {
    padding-right: 2rem;
  }
}

/****** FOOTER ******/
footer.footer {
  background-color: #fff;
  position: relative;
  bottom: 0;
  margin-top: 3rem;
  padding: 0 1.5rem;
}

@media (min-width: 1080px) {
  footer.footer {
    display: flex;
    justify-content: space-between;
  }
  footer.footer li.social__item:not(:first-child) {
    padding-left: 2rem;
  }
}

footer.footer ul.social__list {
  display: flex;
  justify-content: space-between;
  padding: 1.2rem 0;
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
  width: 100%;
}

@media (min-width: 1080px) {
  footer.footer ul.social__list {
    width: auto;
  }
}

footer.footer ul.social__list a.social__link {
  display: flex;
  align-items: center;
  width: 24px;
  height: 24px;
  fill: #ABABAB;
}

footer.footer ul.social__list a.social__link svg.icon {
  transition: all 0.4s ease;
}

footer.footer .maxWidth {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

@media (min-width: 1080px) {
  footer.footer .maxWidth {
    flex-wrap: nowrap;
  }
}

footer.footer small.footer__copyright {
  padding: 1.2rem 0;
  font-size: 1rem;
  display: block;
  text-align: center;
}

/****** List ******/
ul.list {
  width: 100%;
}

ul.list li.list__item {
  position: relative;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

ul.list li.list__item div.item__info {
  animation-delay: 0.5s;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info {
    width: 50%;
    position: absolute;
    z-index: 10;
    right: 0;
  }
}

ul.list li.list__item div.item__info h2.item__title {
  font-size: 2.5rem;
  margin: 2rem 0 0;
  line-height: 2.5rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info h2.item__title {
    margin: 0;
    font-size: 3.25rem;
    line-height: 3.25rem;
  }
}

ul.list li.list__item div.item__info p.item__body {
  color: rgba(0, 0, 0, 0.6);
  margin: 1.5rem 0 2rem;
  line-height: 1.9rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info p.item__body {
    margin: 2rem 0 2.5rem;
  }
}

ul.list li.list__item div.item__info div.actions div.labelContainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1.5rem;
}

ul.list li.list__item div.item__info div.actions div.labelContainer label.actions--label {
  display: block;
  font-size: 0.9rem;
  letter-spacing: 1px;
  font-weight: bold;
  text-transform: uppercase;
  color: #252525;
  margin-right: 1rem;
}

ul.list li.list__item div.item__info div.actions div.labelContainer div.label__separator {
  display: block;
  height: 2px;
  flex-grow: 1;
  background-color: #252525;
  opacity: 0.8;
}

ul.list li.list__item div.item__info div.actions div.buttonContainer {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

ul.list li.list__item picture {
  display: block;
  position: relative;
}

ul.list li.list__item picture img.item__image {
  display: block;
  width: 100%;
  animation-delay: 0.25s;
}

@media (min-width: 1080px) {
  ul.list li.list__item picture img.item__image {
    width: auto;
  }
}

ul.list li.list__item:nth-child(even) {
  flex-direction: row-reverse;
}

@media (min-width: 1080px) {
  ul.list li.list__item:nth-child(even) div.item__info {
    left: 0;
  }
}

ul.list li.list__item:not(:first-child) {
  padding-top: 4rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item:not(:first-child) {
    padding-top: 6rem;
  }
}

ul.list li.list__item:last-child {
  padding-bottom: 4rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item:last-child {
    padding-bottom: 6rem;
  }
}

/****** ABOUT ME ******/
img.about__image {
  display: block;
  margin: 0 auto;
}

ul.projects__list {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

ul.projects__list li {
  width: 25%;
}

ul.projects__list li img {
  width: 100%;
}

/****** BLOG ******/
main.blog header.blog__header {
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
  padding-bottom: 1rem;
  margin-bottom: 2rem;
}

main.blog header.blog__header h2.blog__title {
  font-size: 1.75rem;
  margin-bottom: 1rem;
  line-height: 2rem;
}

main.blog header.blog__header span.blog__date {
  font-size: 1rem;
  font-style: italic;
  opacity: 0.5;
}

/****** WORK ******/
article.work__article .work__header .banner {
  margin-top: 1rem;
}

article.work__article h1.title {
  margin-bottom: 1.5rem;
}

article.work__article section img {
  margin: 2rem 0;
}

/****** TEXT ******/
::selection {
  background: #a36bfb;
}

::-moz-selection {
  background: #a36bfb;
}

h1.title {
  font-size: 3.5rem;
  font-weight: 800;
  letter-spacing: -2px;
  color: #843AF9;
  position: relative;
  line-height: 3.8rem;
  animation-delay: 0.25s;
}

h1.title:before {
  content: attr(data-title);
  position: absolute;
  opacity: 0.07;
  color: #000;
  z-index: -1;
  top: 50%;
  left: 0;
  transform: translateY(-50%) translateX(40%) scale(1.6);
}

@media (min-width: 1080px) {
  h1.title {
    font-size: 5.3rem;
    line-height: 5.5rem;
  }
}

a.link {
  color: #843AF9;
  text-decoration: none;
}

a.link:hover {
  text-decoration: underline;
}

strong {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-weight: 600;
}

em {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-style: italic;
}

.highlighter-rouge {
  margin-bottom: 1rem;
}

.highlighter-rouge pre {
  padding: 16px;
  overflow: auto;
  font-size: 100%;
  line-height: 1.45;
  background-color: rgba(27, 31, 35, 0.05);
  border-radius: 3px;
}

.highlighter-rouge pre code {
  background: none;
}

.highlighter-rouge pre code .kd, .highlighter-rouge pre code .o {
  color: #d73a49;
}

.highlighter-rouge pre code .nx {
  color: #6f42c1;
}

code {
  font-family: "SFMono-Regular",Consolas,"Liberation Mono",Menlo,Courier,monospace;
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(27, 31, 35, 0.05);
  border-radius: 3px;
}

blockquote {
  margin: 2rem 0.35rem 0;
}

blockquote p {
  display: block;
  font-weight: 600;
  padding-left: 1rem;
  box-shadow: -3px 0 0 0 #252525;
}

p.quote__author {
  margin: 0 0.35rem 2rem;
}

p.quote__author a.link {
  font-weight: 600;
}

/****** GENERAL ******/
* {
  box-sizing: border-box;
}

h1, h2, h3, h4, h5 {
  color: #252525;
}

ul, li {
  list-style: none;
  padding: 0;
  margin: 0;
}

body {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-size: 17px;
  overflow-x: hidden;
  /*
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-feature-settings: "liga" on;
  */
  background-color: #F2EEED;
  color: #3C3C3C;
  position: relative;
  max-width: 100vw;
  min-height: 100vh;
  margin: 0;
  padding-top: 66px;
}

main {
  padding: 0 1.5rem;
  max-width: 1080px;
  margin: 0 auto;
}

@media (min-width: 1080px) {
  main {
    padding: 0;
  }
}

.maxWidth {
  max-width: 1280px;
  width: 100%;
  margin: 0 auto;
}

img {
  display: block;
}

article section {
  max-width: 800px;
  margin: 0 auto;
}

.visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyHidden.focusable:active, .visuallyHidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
