/**
 * -----------------
 * TABLE OF CONTENTS
 * -----------------
 * LIB -------------
 ** Normalize
 * UTILITIES
 ** Mixins
 ** Colors
 ** Variables
 ** Media Queries
 ** Icons
 * BASE ------------
 ** Typo
 ** Text
 ** Button
 ** Form
 * MODULES ---------
 ** Nav
 ** Header
 ** Footer
 ** List
 ** About me
 ** Work
 * GENERAL ---------
 ** Reset
 ** Base
 */
/****** LIB ******/
/****** UTILITIES ******/
/**
 * --------------------------
 * TABLE OF CONTENTS - MIXINS
 * --------------------------
 * Base (BoxSizing, Clearfix)
 * Accessibility
 * Typography
 */
/******** Base (BoxSizing, Clearfix) *********/
/******** Accessibility *********/
/******** Typography *********/
/****** COLORS ******/
/****** MEDIA QUERIES ******/
/****** VARIABLES ******/
a.icon {
  display: block;
  font-size: 0;
  background: center no-repeat;
}

a.icon--hamburger {
  background-image: url(../images/icons/hamburger.svg);
}

a.icon--close {
  background-image: url(../images/icons/close.svg);
}

svg.icon {
  display: block;
}

svg.icon--twitter:hover {
  fill: #00AAEC;
}

svg.icon--dribbble:hover {
  fill: #EC4989;
}

svg.icon--github:hover {
  fill: #3E75C3;
}

svg.icon--instagram:hover {
  fill: #EF307C;
}

svg.icon--linkedin:hover {
  fill: #007EBB;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.loadAnimated {
  opacity: 0;
  animation: fade-in ease 0.75s;
  animation-fill-mode: forwards;
  animation-delay: 0.25s;
}

/****** BASE ******/
/****** TYPOGRAPHY ******/
@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Italic.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Italic.woff") format("woff");
  font-weight: normal;
  font-style: italic;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Medium.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Medium.woff") format("woff");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-Bold.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Larsseit';
  src: url("../fonts/Larsseit/Larsseit-ExtraBold.woff2") format("woff2"), url("../fonts/Larsseit/Larsseit-ExtraBold.woff") format("woff");
  font-weight: 800;
  font-style: normal;
}

/****** TEXT ******/
::selection {
  background: #a36bfb;
}

::-moz-selection {
  background: #a36bfb;
}

h1.title {
  font-size: 3.5rem;
  font-weight: 800;
  letter-spacing: -2px;
  color: #843AF9;
  position: relative;
  line-height: 3.8rem;
  animation-delay: 0.25s;
}

h1.title:before {
  content: attr(data-title);
  position: absolute;
  opacity: 0.07;
  color: #000;
  z-index: -1;
  top: 50%;
  left: 0;
  transform: translateY(-50%) translateX(40%) scale(1.6);
}

@media (min-width: 1080px) {
  h1.title {
    font-size: 5.3rem;
    line-height: 5.5rem;
  }
}

p.subHead {
  padding-bottom: 2rem;
}

a.link {
  color: #843AF9;
  text-decoration: none;
}

a.link:hover {
  text-decoration: underline;
}

strong {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-weight: 600;
}

em {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-style: italic;
}

.highlighter-rouge {
  margin-bottom: 1rem;
}

.highlighter-rouge pre {
  padding: 16px;
  overflow: auto;
  font-size: 100%;
  line-height: 1.45;
  background-color: rgba(27, 31, 35, 0.05);
  border-radius: 3px;
}

.highlighter-rouge pre code {
  background: none;
}

.highlighter-rouge pre code .kd, .highlighter-rouge pre code .o {
  color: #d73a49;
}

.highlighter-rouge pre code .nx {
  color: #6f42c1;
}

code {
  font-family: "SFMono-Regular",Consolas,"Liberation Mono",Menlo,Courier,monospace;
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(27, 31, 35, 0.05);
  border-radius: 3px;
}

blockquote {
  margin: 2rem 0.35rem 0;
}

blockquote p {
  display: block;
  font-weight: 600;
  padding-left: 1rem;
  box-shadow: -3px 0 0 0 #252525;
}

p.quote__author {
  margin: 0 0.35rem 2rem;
}

p.quote__author a.link {
  font-weight: 600;
}

/****** BUTTONS ******/
.button {
  display: inline-block;
  position: relative;
  padding: 1rem 0;
  min-width: 250px;
  box-shadow: inset 0 0 0 2px #252525;
  background: none;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  border: 0;
  font-weight: bold;
  font-size: 1rem;
  text-align: center;
  margin-bottom: 1rem;
  flex-grow: 1;
  flex-basis: 40%;
  cursor: pointer;
  outline: 0;
  transition: all 0.2s ease;
}

.button:hover:before, .button:focus:before {
  box-shadow: inset 0 0 0 2px #252525;
  transform: none;
}

.button:active {
  transform: scale(0.95);
}

.button:active:before {
  box-shadow: inset 0 0 0 2px #252525;
  transform: none;
}

.button:before {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  background-color: #843AF9;
  width: 100%;
  height: 100%;
  z-index: -2;
  transform: translateX(-4px) translateY(4px);
  transition: all 0.2s ease;
}

a.button:nth-child(even) {
  margin-left: 1rem;
}

button.button {
  margin-top: 1rem;
}

/****** FORM ******/
form.form {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

form.form label.form__label {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

form.form label.form__label.focusable:active, form.form label.form__label.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

form.form div.inputContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

form.form div.inputContainer input.form__input:nth-of-type(1), form.form div.inputContainer textarea:nth-of-type(1) {
  margin-right: 0.6rem;
}

form.form input.form__input, form.form textarea {
  width: 100%;
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  display: inline-block;
  background: rgba(0, 0, 0, 0.05);
  border: 0;
  padding: 1rem;
  color: #000;
  font-weight: normal;
  font-size: 1rem;
  margin-bottom: 0.6rem;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  transition: all 0.2s ease;
}

form.form input.form__input:focus, form.form textarea:focus {
  background: rgba(0, 0, 0, 0.1);
}

form.form textarea {
  min-height: 100px;
  min-width: 100%;
}

form.form ::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  color: rgba(0, 0, 0, 0.5);
}

form.form ::-moz-placeholder {
  /* Firefox 19+ */
  color: rgba(0, 0, 0, 0.5);
}

form.form :-ms-input-placeholder {
  /* IE 10+ */
  color: rgba(0, 0, 0, 0.5);
}

form.form :-moz-placeholder {
  /* Firefox 18- */
  color: rgba(0, 0, 0, 0.5);
}

/****** MODULES ******/
/****** NAV ******/
nav.nav {
  padding: 1.2rem 0;
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
  width: 100%;
  overflow: hidden;
  transition: all 0.2s ease;
}

@media (min-width: 1080px) {
  nav.nav {
    width: auto;
  }
}

nav.nav ul.nav__list {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  transition: all 0.2s ease;
}

nav.nav ul.nav__list div.nav__languages a.nav__link:first-child {
  margin-right: 1rem;
}

@media (min-width: 1080px) {
  nav.nav ul.nav__list div.nav__languages:before {
    content: "|";
    display: inline-block;
    margin-right: 1rem;
  }
}

nav.nav ul.nav__list .nav__item {
  width: 100%;
  text-align: center;
  margin: 1rem 0;
}

@media (min-width: 1080px) {
  nav.nav ul.nav__list .nav__item {
    width: auto;
    text-align: left;
    margin: 0;
  }
}

nav.nav ul.nav__list .nav__items {
  display: block;
  width: 100%;
  box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.05);
  padding: 1.5rem 0 0.5rem;
  margin-top: 0.5rem;
}

@media (min-width: 1080px) {
  nav.nav ul.nav__list .nav__items {
    width: auto;
    box-shadow: none;
    padding: 0;
    margin: 0;
  }
}

nav.nav ul.nav__list .nav__link {
  font-size: 1.5rem;
  color: #252525;
  text-decoration: none;
  transition: all 0.2s ease;
}

@media (min-width: 1080px) {
  nav.nav ul.nav__list .nav__link {
    font-size: 1rem;
  }
}

nav.nav ul.nav__list .nav__link--lang {
  background: none;
  box-shadow: none;
  border: 0;
  font-size: 1rem;
  outline: 0;
}

nav.nav ul.nav__list .nav__link--lang:hover {
  cursor: pointer;
}

nav.nav ul.nav__list .nav__link--active {
  font-weight: 600;
  text-decoration: underline;
}

nav.nav ul.nav__list .nav__link:hover {
  opacity: 0.5;
}

/****** HEADER ******/
header.header {
  width: 100%;
  top: 0;
  padding: 0 1.5rem;
  transition: all 0.2s ease;
  z-index: 999;
  position: fixed;
}

header.header.header--inTransition {
  background-color: #fff;
}

header.header.header--inTransition div.headerContainer {
  padding: 1rem 0;
}

header.header .maxWidth {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

@media (min-width: 1080px) {
  header.header .maxWidth {
    flex-wrap: nowrap;
  }
}

header.header.opened {
  box-shadow: 0 12px 25px 0 rgba(0, 0, 0, 0.1);
  background-color: #fff;
}

header.header.opened div.headerContainer {
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
}

header.header.opened nav.nav {
  height: auto;
  padding: 1rem 0;
  box-shadow: none;
}

header.header.opened nav.nav ul.nav__list {
  opacity: 1;
}

header.header div.headerContainer {
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  transition: all 0.2s ease;
  padding: 1.5rem 0;
}

@media (min-width: 1080px) {
  header.header div.headerContainer {
    width: auto;
    padding: 2rem 0;
  }
  header.header div.headerContainer a.header__action {
    display: none;
  }
}

header.header div.headerContainer a.header__logo {
  display: block;
  text-decoration: none;
  color: #252525;
  font-size: 1.3rem;
  font-weight: 600;
  transition: all 0.2s ease;
}

header.header div.headerContainer a.header__logo:hover {
  opacity: 0.5;
}

header.header div.headerContainer a.header__action {
  width: 22px;
  height: 22px;
}

header.header nav.nav {
  height: 0;
  padding: 0 1rem;
}

header.header nav.nav ul.nav__list {
  opacity: 0;
}

@media (min-width: 1080px) {
  header.header nav.nav {
    height: auto;
    padding: 0;
    box-shadow: none;
  }
  header.header nav.nav ul.nav__list {
    opacity: 1;
  }
  header.header nav.nav li.nav__item:not(:last-child) {
    padding-right: 2rem;
  }
}

/****** FOOTER ******/
footer.footer {
  background-color: #fff;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  margin-top: 3rem;
  padding: 0 1.5rem;
}

@media (min-width: 1080px) {
  footer.footer {
    display: flex;
    justify-content: space-between;
  }
  footer.footer li.social__item:not(:first-child) {
    padding-left: 2rem;
  }
}

footer.footer ul.social__list {
  display: flex;
  justify-content: space-between;
  padding: 1.2rem 0;
  box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.05);
  width: 100%;
}

@media (min-width: 1080px) {
  footer.footer ul.social__list {
    width: auto;
  }
}

footer.footer ul.social__list a.social__link {
  display: flex;
  align-items: center;
  width: 24px;
  height: 24px;
  fill: #ABABAB;
}

footer.footer ul.social__list a.social__link svg.icon {
  transition: all 0.4s ease;
}

footer.footer .maxWidth {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

@media (min-width: 1080px) {
  footer.footer .maxWidth {
    flex-wrap: nowrap;
  }
}

footer.footer small.footer__copyright {
  padding: 1.2rem 0;
  font-size: 1rem;
  display: block;
  text-align: center;
}

/****** List ******/
ul.list {
  width: 100%;
}

ul.list li.list__item {
  position: relative;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

ul.list li.list__item div.item__info {
  animation-delay: 0.5s;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info {
    width: 50%;
    position: absolute;
    z-index: 10;
    right: 0;
  }
}

ul.list li.list__item div.item__info h2.item__title {
  font-size: 2.5rem;
  margin: 2rem 0 0;
  line-height: 2.5rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info h2.item__title {
    margin: 0;
    font-size: 3.25rem;
    line-height: 3.25rem;
  }
}

ul.list li.list__item div.item__info p.item__body {
  color: rgba(0, 0, 0, 0.6);
  margin: 1.5rem 0 2rem;
  line-height: 1.9rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item div.item__info p.item__body {
    margin: 2rem 0 2.5rem;
  }
}

ul.list li.list__item div.item__info div.actions div.labelContainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1.5rem;
}

ul.list li.list__item div.item__info div.actions div.labelContainer label.actions--label {
  display: block;
  font-size: 0.9rem;
  letter-spacing: 1px;
  font-weight: bold;
  text-transform: uppercase;
  color: #252525;
  margin-right: 1rem;
}

ul.list li.list__item div.item__info div.actions div.labelContainer div.label__separator {
  display: block;
  height: 2px;
  flex-grow: 1;
  background-color: #252525;
  opacity: 0.8;
}

ul.list li.list__item div.item__info div.actions div.buttonContainer {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

ul.list li.list__item picture {
  display: block;
  position: relative;
}

ul.list li.list__item picture img.item__image {
  display: block;
  width: 100%;
}

@media (min-width: 1080px) {
  ul.list li.list__item picture img.item__image {
    width: auto;
  }
}

ul.list li.list__item:nth-child(even) {
  flex-direction: row-reverse;
}

@media (min-width: 1080px) {
  ul.list li.list__item:nth-child(even) div.item__info {
    left: 0;
  }
}

ul.list li.list__item:not(:first-child) {
  padding-top: 4rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item:not(:first-child) {
    padding-top: 6rem;
  }
}

ul.list li.list__item:last-child {
  padding-bottom: 4rem;
}

@media (min-width: 1080px) {
  ul.list li.list__item:last-child {
    padding-bottom: 6rem;
  }
}

/****** ABOUT ME ******/
img.about__image {
  display: block;
  margin: 0 auto;
}

ul.projects__list {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

ul.projects__list li {
  width: 25%;
}

ul.projects__list li img {
  width: 100%;
}

/****** WORK ******/
article.work__article .work__header .banner {
  margin-top: 1rem;
}

article.work__article h1.title {
  margin-bottom: 1.5rem;
}

article.work__article section img {
  margin: 2rem 0;
}

/****** GENERAL ******/
* {
  box-sizing: border-box;
}

h1, h2, h3, h4, h5 {
  color: #252525;
}

ul, li {
  list-style: none;
  padding: 0;
  margin: 0;
}

body {
  font-family: Larsseit, "Larsseit", Avenir Next, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-weight: normal;
  font-size: 17px;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-feature-settings: "liga" on;
  background-color: #F2EEED;
  color: #3C3C3C;
  position: relative;
  max-width: 100vw;
  min-height: 100vh;
  margin: 0;
  padding-top: 66px;
  padding-bottom: 6rem;
}

main {
  padding: 0 1.5rem;
  margin: 0 auto;
}

@media (min-width: 1080px) {
  main {
    padding: 0;
  }
}

main.large div.maxWidth {
  max-width: 1080px;
}

main.narrow div.maxWidth {
  max-width: 800px;
}

div.landingPage {
  display: flex;
  align-items: center;
  min-height: 80vh;
}

div.maxWidth {
  max-width: 1280px;
  width: 100%;
  margin: 0 auto;
}

img {
  display: block;
}

.visuallyHidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyHidden.focusable:active, .visuallyHidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXMiOlsic3R5bGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9fbm9ybWFsaXplLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9ub3JtYWxpemUvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS1zY3NzL3Nhc3Mvbm9ybWFsaXplL192ZXJ0aWNhbC1yaHl0aG0uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUtc2Nzcy9zYXNzL25vcm1hbGl6ZS9fbm9ybWFsaXplLW1peGluLnNjc3MiLCJ1dGlsaXRpZXMvX21peGlucy5zY3NzIiwidXRpbGl0aWVzL19jb2xvcnMuc2NzcyIsInV0aWxpdGllcy9fbWVkaWFxdWVyaWVzLnNjc3MiLCJ1dGlsaXRpZXMvX3ZhcmlhYmxlcy5zY3NzIiwidXRpbGl0aWVzL19pY29ucy5zY3NzIiwidXRpbGl0aWVzL19hbmltYXRpb24uc2NzcyIsImJhc2UvX3R5cG8uc2NzcyIsImJhc2UvX3RleHQuc2NzcyIsImJhc2UvX2J1dHRvbnMuc2NzcyIsImJhc2UvX2Zvcm0uc2NzcyIsIm1vZHVsZXMvX25hdi5zY3NzIiwibW9kdWxlcy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL19mb290ZXIuc2NzcyIsIm1vZHVsZXMvX2xpc3Quc2NzcyIsIm1vZHVsZXMvX2Fib3V0LnNjc3MiLCJtb2R1bGVzL193b3JrLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLVxuICogVEFCTEUgT0YgQ09OVEVOVFNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tXG4gKiBMSUIgLS0tLS0tLS0tLS0tLVxuICoqIE5vcm1hbGl6ZVxuICogVVRJTElUSUVTXG4gKiogTWl4aW5zXG4gKiogQ29sb3JzXG4gKiogVmFyaWFibGVzXG4gKiogTWVkaWEgUXVlcmllc1xuICoqIEljb25zXG4gKiBCQVNFIC0tLS0tLS0tLS0tLVxuICoqIFR5cG9cbiAqKiBUZXh0XG4gKiogQnV0dG9uXG4gKiogRm9ybVxuICogTU9EVUxFUyAtLS0tLS0tLS1cbiAqKiBOYXZcbiAqKiBIZWFkZXJcbiAqKiBGb290ZXJcbiAqKiBMaXN0XG4gKiogQWJvdXQgbWVcbiAqKiBXb3JrXG4gKiBHRU5FUkFMIC0tLS0tLS0tLVxuICoqIFJlc2V0XG4gKiogQmFzZVxuICovXG5cbi8qKioqKiogTElCICoqKioqKi9cbkBpbXBvcnQgXCIuLi8uLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLXNjc3Mvc2Fzcy9ub3JtYWxpemVcIjtcblxuLyoqKioqKiBVVElMSVRJRVMgKioqKioqL1xuQGltcG9ydCAndXRpbGl0aWVzL21peGlucyc7XG5AaW1wb3J0ICd1dGlsaXRpZXMvY29sb3JzJztcbkBpbXBvcnQgJ3V0aWxpdGllcy9tZWRpYXF1ZXJpZXMnO1xuQGltcG9ydCAndXRpbGl0aWVzL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICd1dGlsaXRpZXMvaWNvbnMnO1xuQGltcG9ydCAndXRpbGl0aWVzL2FuaW1hdGlvbic7XG5cbi8qKioqKiogQkFTRSAqKioqKiovXG5AaW1wb3J0ICdiYXNlL3R5cG8nO1xuQGltcG9ydCAnYmFzZS90ZXh0JztcbkBpbXBvcnQgJ2Jhc2UvYnV0dG9ucyc7XG5AaW1wb3J0ICdiYXNlL2Zvcm0nO1xuXG4vKioqKioqIE1PRFVMRVMgKioqKioqL1xuQGltcG9ydCAnbW9kdWxlcy9uYXYnO1xuQGltcG9ydCAnbW9kdWxlcy9oZWFkZXInO1xuQGltcG9ydCAnbW9kdWxlcy9mb290ZXInO1xuQGltcG9ydCAnbW9kdWxlcy9saXN0JztcbkBpbXBvcnQgJ21vZHVsZXMvYWJvdXQnO1xuQGltcG9ydCAnbW9kdWxlcy93b3JrJztcblxuLyoqKioqKiBHRU5FUkFMICoqKioqKi9cblxuLy8gUmVzZXRcbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUge1xuICBjb2xvcjogJGRhcmtlckdyZXk7XG59XG5cbnVsLCBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLy8gQkFTRVxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAkZm9udDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtbW96LWZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJsaWdhXCIgb247XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kO1xuICBjb2xvcjogJGRhcmtHcmV5O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1heC13aWR0aDogMTAwdnc7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmctdG9wOiA2NnB4O1xuICBwYWRkaW5nLWJvdHRvbTogNnJlbTtcbn1cblxubWFpbiB7XG4gIHBhZGRpbmc6ICRwYWRkaW5nR2VuZXJhbDtcbiAgLy9tYXgtd2lkdGg6ICR3aWR0aE1lZGl1bTtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gICYubGFyZ2Uge1xuICAgIGRpdi5tYXhXaWR0aCB7XG4gICAgICBtYXgtd2lkdGg6ICR3aWR0aE1lZGl1bTtcbiAgICB9XG4gIH1cbiAgJi5uYXJyb3cge1xuICAgIGRpdi5tYXhXaWR0aCB7XG4gICAgICBtYXgtd2lkdGg6ICR3aWR0aFNtYWxsO1xuICAgIH1cbiAgfVxufVxuXG4vLyBMYW5kaW5nIHBhZ2VcbmRpdi5sYW5kaW5nUGFnZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDgwdmg7XG59XG5cbi8vIE1heC13aWR0aFxuZGl2Lm1heFdpZHRoIHtcbiAgbWF4LXdpZHRoOiAkd2lkdGhMYXJnZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4vLyBJbWFnZVxuaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi52aXN1YWxseUhpZGRlbiB7XG4gIEBpbmNsdWRlIHZpc3VhbGx5aGlkZGVuKCk7XG59XG4iLCJAaW1wb3J0ICdub3JtYWxpemUvdmFyaWFibGVzJztcbkBpbXBvcnQgJ25vcm1hbGl6ZS92ZXJ0aWNhbC1yaHl0aG0nO1xuQGltcG9ydCAnbm9ybWFsaXplL25vcm1hbGl6ZS1taXhpbic7XG4iLCIvL1xuLy8gVmFyaWFibGVzXG4vL1xuLy8gWW91IGNhbiBvdmVycmlkZSB0aGUgZGVmYXVsdCB2YWx1ZXMgYnkgc2V0dGluZyB0aGUgdmFyaWFibGVzIGluIHlvdXIgU2Fzc1xuLy8gYmVmb3JlIGltcG9ydGluZyB0aGUgbm9ybWFsaXplLXNjc3MgbGlicmFyeS5cblxuLy8gVGhlIGZvbnQgc2l6ZSBzZXQgb24gdGhlIHJvb3QgaHRtbCBlbGVtZW50LlxuJGJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgYmFzZSBsaW5lIGhlaWdodCBkZXRlcm1pbmVzIHRoZSBiYXNpYyB1bml0IG9mIHZlcnRpY2FsIHJoeXRobS5cbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNHB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgbGVuZ3RoIHVuaXQgaW4gd2hpY2ggdG8gb3V0cHV0IHZlcnRpY2FsIHJoeXRobSB2YWx1ZXMuXG4vLyBTdXBwb3J0ZWQgdmFsdWVzOiBweCwgZW0sIHJlbS5cbiRiYXNlLXVuaXQ6ICdlbScgIWRlZmF1bHQ7XG5cbi8vIFRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5LlxuJGJhc2UtZm9udC1mYW1pbHk6IG51bGwgIWRlZmF1bHQ7XG5cbi8vIFRoZSBmb250IHNpemVzIGZvciBoMS1oNi5cbiRoMS1mb250LXNpemU6IDIgICAgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDItZm9udC1zaXplOiAxLjUgICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGgzLWZvbnQtc2l6ZTogMS4xNyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRoNC1mb250LXNpemU6IDEgICAgKiAkYmFzZS1mb250LXNpemUgIWRlZmF1bHQ7XG4kaDUtZm9udC1zaXplOiAwLjgzICogJGJhc2UtZm9udC1zaXplICFkZWZhdWx0O1xuJGg2LWZvbnQtc2l6ZTogMC42NyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcblxuLy8gVGhlIGFtb3VudCBsaXN0cyBhbmQgYmxvY2txdW90ZXMgYXJlIGluZGVudGVkLlxuJGluZGVudC1hbW91bnQ6IDQwcHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBmb2xsb3dpbmcgdmFyaWFibGUgY29udHJvbHMgd2hldGhlciBub3JtYWxpemUtc2NzcyB3aWxsIG91dHB1dFxuLy8gZm9udC1zaXplcywgbGluZS1oZWlnaHRzIGFuZCBibG9jay1sZXZlbCB0b3AvYm90dG9tIG1hcmdpbnMgdGhhdCBmb3JtIGEgYmFzaWNcbi8vIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgcGFnZSwgd2hpY2ggZGlmZmVycyBmcm9tIHRoZSBvcmlnaW5hbCBOb3JtYWxpemUuY3NzLlxuLy8gSG93ZXZlciwgY2hhbmdpbmcgYW55IG9mIHRoZSB2YXJpYWJsZXMgYWJvdmUgd2lsbCBjYXVzZVxuLy8gJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0gdG8gYmUgYXV0b21hdGljYWxseSBzZXQgdG8gdHJ1ZS5cbiRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtOiBmYWxzZSAhZGVmYXVsdDtcbiIsIi8vXG4vLyBWZXJ0aWNhbCBSaHl0aG1cbi8vXG4vLyBUaGlzIGlzIHRoZSBtaW5pbWFsIGFtb3VudCBvZiBjb2RlIG5lZWRlZCB0byBjcmVhdGUgdmVydGljYWwgcmh5dGhtIGluIG91clxuLy8gQ1NTLiBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGEgcm9idXN0IHNvbHV0aW9uLCBsb29rIGF0IHRoZSBleGNlbGxlbnQgVHlwZXlcbi8vIGxpYnJhcnkuIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2pwdGFyYW50by90eXBleVxuXG5AZnVuY3Rpb24gbm9ybWFsaXplLXJoeXRobSgkdmFsdWUsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplLCAkdW5pdDogJGJhc2UtdW5pdCkge1xuICBAaWYgdW5pdCgkdmFsdWUpICE9IHB4IHtcbiAgICBAZXJyb3IgXCJUaGUgbm9ybWFsaXplIHZlcnRpY2FsLXJoeXRobSBtb2R1bGUgb25seSBzdXBwb3J0cyBweCBpbnB1dHMuIFRoZSB0eXBleSBsaWJyYXJ5IGlzIGJldHRlci5cIjtcbiAgfVxuICBAaWYgJHVuaXQgPT0gcmVtIHtcbiAgICBAcmV0dXJuICgkdmFsdWUgLyAkYmFzZS1mb250LXNpemUpICogMXJlbTtcbiAgfVxuICBAZWxzZSBpZiAkdW5pdCA9PSBlbSB7XG4gICAgQHJldHVybiAoJHZhbHVlIC8gJHJlbGF0aXZlLXRvKSAqIDFlbTtcbiAgfVxuICBAZWxzZSB7IC8vICR1bml0ID09IHB4XG4gICAgQHJldHVybiAkdmFsdWU7XG4gIH1cbn1cblxuQG1peGluIG5vcm1hbGl6ZS1mb250LXNpemUoJHZhbHVlLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaWYgdW5pdCgkdmFsdWUpICE9ICdweCcge1xuICAgIEBlcnJvciBcIm5vcm1hbGl6ZS1mb250LXNpemUoKSBvbmx5IHN1cHBvcnRzIHB4IGlucHV0cy4gVGhlIHR5cGV5IGxpYnJhcnkgaXMgYmV0dGVyLlwiO1xuICB9XG4gIGZvbnQtc2l6ZTogbm9ybWFsaXplLXJoeXRobSgkdmFsdWUsICRyZWxhdGl2ZS10byk7XG59XG5cbkBtaXhpbiBub3JtYWxpemUtcmh5dGhtKCRwcm9wZXJ0eSwgJHZhbHVlcywgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUpIHtcbiAgJHZhbHVlLWxpc3Q6ICR2YWx1ZXM7XG4gICRzZXA6IHNwYWNlO1xuICBAaWYgdHlwZS1vZigkdmFsdWVzKSA9PSAnbGlzdCcge1xuICAgICRzZXA6IGxpc3Qtc2VwYXJhdG9yKCR2YWx1ZXMpO1xuICB9XG4gIEBlbHNlIHtcbiAgICAkdmFsdWUtbGlzdDogYXBwZW5kKCgpLCAkdmFsdWVzKTtcbiAgfVxuXG4gICRub3JtYWxpemVkLXZhbHVlczogKCk7XG4gIEBlYWNoICR2YWx1ZSBpbiAkdmFsdWUtbGlzdCB7XG4gICAgQGlmIHVuaXRsZXNzKCR2YWx1ZSkgYW5kICR2YWx1ZSAhPSAwIHtcbiAgICAgICR2YWx1ZTogJHZhbHVlICogbm9ybWFsaXplLXJoeXRobSgkYmFzZS1saW5lLWhlaWdodCwgJHJlbGF0aXZlLXRvKTtcbiAgICB9XG4gICAgJG5vcm1hbGl6ZWQtdmFsdWVzOiBhcHBlbmQoJG5vcm1hbGl6ZWQtdmFsdWVzLCAkdmFsdWUsICRzZXApO1xuICB9XG4gICN7JHByb3BlcnR5fTogJG5vcm1hbGl6ZWQtdmFsdWVzO1xufVxuXG5AbWl4aW4gbm9ybWFsaXplLW1hcmdpbigkdmFsdWVzLCAkcmVsYXRpdmUtdG86ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaW5jbHVkZSBub3JtYWxpemUtcmh5dGhtKG1hcmdpbiwgJHZhbHVlcywgJHJlbGF0aXZlLXRvKTtcbn1cblxuQG1peGluIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkZm9udC1zaXplLCAkbWluLWxpbmUtcGFkZGluZzogMnB4KSB7XG4gICRsaW5lczogY2VpbCgkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpO1xuICAvLyBJZiBsaW5lcyBhcmUgY3JhbXBlZCBpbmNsdWRlIHNvbWUgZXh0cmEgbGVhZGluZy5cbiAgQGlmICgkbGluZXMgKiAkYmFzZS1saW5lLWhlaWdodCAtICRmb250LXNpemUpIDwgKCRtaW4tbGluZS1wYWRkaW5nICogMikge1xuICAgICRsaW5lczogJGxpbmVzICsgMTtcbiAgfVxuICBAaW5jbHVkZSBub3JtYWxpemUtcmh5dGhtKGxpbmUtaGVpZ2h0LCAkbGluZXMsICRmb250LXNpemUpO1xufVxuIiwiLy8gSGVscGVyIGZ1bmN0aW9uIGZvciB0aGUgbm9ybWFsaXplKCkgbWl4aW4uXG5AZnVuY3Rpb24gX25vcm1hbGl6ZS1pbmNsdWRlKCRzZWN0aW9uLCAkZXhjbHVkZTogbnVsbCkge1xuICAvLyBJbml0aWFsaXplIHRoZSBnbG9iYWwgdmFyaWFibGVzIG5lZWRlZCBieSB0aGlzIGZ1bmN0aW9uLlxuICBAaWYgbm90IGdsb2JhbF92YXJpYWJsZV9leGlzdHMoX25vcm1hbGl6ZS1pbmNsdWRlKSB7XG4gICAgJF9ub3JtYWxpemUtaW5jbHVkZTogKCkgIWdsb2JhbDtcbiAgICAkX25vcm1hbGl6ZS1leGNsdWRlOiAoKSAhZ2xvYmFsO1xuICB9XG4gIC8vIFNpbmNlIHdlIGFyZSBnaXZlbiAyIHBhcmFtZXRlcnMsIHNldCB0aGUgZ2xvYmFsIHZhcmlhYmxlcy5cbiAgQGlmICRleGNsdWRlICE9IG51bGwge1xuICAgICRpbmNsdWRlOiAkc2VjdGlvbjtcbiAgICAvLyBTYXNzIGRvZXNuJ3QgaGF2ZSBzdGF0aWMgdmFyaWFibGVzLCBzbyB0aGUgd29yay1hcm91bmQgaXMgdG8gc3R1ZmYgdGhlc2VcbiAgICAvLyB2YWx1ZXMgaW50byBnbG9iYWwgdmFyaWFibGVzIHNvIHdlIGNhbiBhY2Nlc3MgdGhlbSBpbiBmdXR1cmUgY2FsbHMuXG4gICAgJF9ub3JtYWxpemUtaW5jbHVkZTogaWYodHlwZS1vZigkaW5jbHVkZSkgPT0gJ2xpc3QnLCAkaW5jbHVkZSwgKCRpbmNsdWRlKSkgIWdsb2JhbDtcbiAgICAkX25vcm1hbGl6ZS1leGNsdWRlOiBpZih0eXBlLW9mKCRleGNsdWRlKSA9PSAnbGlzdCcsICRleGNsdWRlLCAoJGV4Y2x1ZGUpKSAhZ2xvYmFsO1xuICAgIEByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIENoZWNrIGlmICRzZWN0aW9uIGlzIGluIHRoZSAkaW5jbHVkZSBsaXN0LlxuICBAaWYgaW5kZXgoJF9ub3JtYWxpemUtaW5jbHVkZSwgJHNlY3Rpb24pIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cbiAgLy8gSWYgJGluY2x1ZGUgaXMgc2V0IHRvIChhbGwpLCBtYWtlIHN1cmUgJHNlY3Rpb24gaXMgbm90IGluICRleGNsdWRlLlxuICBAZWxzZSBpZiBub3QgaW5kZXgoJF9ub3JtYWxpemUtZXhjbHVkZSwgJHNlY3Rpb24pIGFuZCBpbmRleCgkX25vcm1hbGl6ZS1pbmNsdWRlLCBhbGwpIHtcbiAgICBAcmV0dXJuIHRydWU7XG4gIH1cbiAgQHJldHVybiBmYWxzZTtcbn1cblxuQG1peGluIG5vcm1hbGl6ZSgkaW5jbHVkZTogKGFsbCksICRleGNsdWRlOiAoKSkge1xuICAvLyBJbml0aWFsaXplIHRoZSBoZWxwZXIgZnVuY3Rpb24gYnkgcGFzc2luZyBpdCB0aGlzIG1peGluJ3MgcGFyYW1ldGVycy5cbiAgJGluaXQ6IF9ub3JtYWxpemUtaW5jbHVkZSgkaW5jbHVkZSwgJGV4Y2x1ZGUpO1xuXG4gIC8vIElmIHdlJ3ZlIGN1c3RvbWl6ZWQgYW55IGZvbnQgdmFyaWFibGVzLCB3ZSdsbCBuZWVkIGV4dHJhIHByb3BlcnRpZXMuXG4gIEBpZiAkYmFzZS1saW5lLWhlaWdodCAhPSAyNHB4XG4gICAgb3IgJGJhc2UtdW5pdCAhPSAnZW0nXG4gICAgb3IgJGgyLWZvbnQtc2l6ZSAhPSAxLjUgICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGgzLWZvbnQtc2l6ZSAhPSAxLjE3ICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg0LWZvbnQtc2l6ZSAhPSAxICAgICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg1LWZvbnQtc2l6ZSAhPSAwLjgzICogJGJhc2UtZm9udC1zaXplXG4gICAgb3IgJGg2LWZvbnQtc2l6ZSAhPSAwLjY3ICogJGJhc2UtZm9udC1zaXplIHtcbiAgICAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobTogdHJ1ZSAhZ2xvYmFsO1xuICB9XG5cbiAgLyohIG5vcm1hbGl6ZS1zY3NzIHwgTUlUL0dQTHYyIExpY2Vuc2UgfCBiaXQubHkvbm9ybWFsaXplLXNjc3MgKi9cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGRvY3VtZW50KSB7XG4gICAgLyogRG9jdW1lbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAgICAgKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gICAgICovXG5cbiAgICBodG1sIHtcbiAgICAgIEBpZiAkYmFzZS1mb250LWZhbWlseSB7XG4gICAgICAgIC8qIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS4gKi9cbiAgICAgICAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICAgICAgfVxuICAgICAgQGlmICRiYXNlLWZvbnQtc2l6ZSAhPSAxNnB4IG9yICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgLy8gQ29ycmVjdCBvbGQgYnJvd3NlciBidWcgdGhhdCBwcmV2ZW50ZWQgYWNjZXNzaWJsZSByZXNpemluZyBvZiB0ZXh0XG4gICAgICAgIC8vIHdoZW4gcm9vdCBmb250LXNpemUgaXMgc2V0IHdpdGggcHggb3IgZW0uXG4gICAgICAgIGZvbnQtc2l6ZTogKCRiYXNlLWZvbnQtc2l6ZSAvIDE2cHgpICogMTAwJTtcbiAgICAgIH1cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAoJGJhc2UtbGluZS1oZWlnaHQgLyAkYmFzZS1mb250LXNpemUpICogMWVtOyAvKiAxICovXG4gICAgICB9XG4gICAgICBAZWxzZSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gICAgICB9XG4gICAgICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShzZWN0aW9ucykge1xuICAgIC8qIFNlY3Rpb25zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICAgICAqL1xuXG4gICAgYm9keSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBhcnRpY2xlLFxuICAgIGFzaWRlLFxuICAgIGZvb3RlcixcbiAgICBoZWFkZXIsXG4gICAgbmF2LFxuICAgIHNlY3Rpb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICAgICAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gICAgICovXG5cbiAgICBoMSB7XG4gICAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMS1mb250LXNpemUpO1xuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWxpbmUtaGVpZ2h0KCRoMS1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICAvKiBTZXQgMSB1bml0IG9mIHZlcnRpY2FsIHJoeXRobSBvbiB0aGUgdG9wIGFuZCBib3R0b20gbWFyZ2lucy4gKi9cbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMS1mb250LXNpemUpO1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBtYXJnaW46IDAuNjdlbSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICBoMiB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGgyLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDItZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMi1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoMyB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGgzLWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDMtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMy1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNCB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg0LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDQtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNC1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg1LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDUtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNS1mb250LXNpemUpO1xuICAgICAgfVxuXG4gICAgICBoNiB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg2LWZvbnQtc2l6ZSk7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDYtZm9udC1zaXplKTtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNi1mb250LXNpemUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoZ3JvdXBpbmcpIHtcbiAgICAvKiBHcm91cGluZyBjb250ZW50XG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAvKipcbiAgICAgICAqIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgKi9cblxuICAgICAgYmxvY2txdW90ZSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAkaW5kZW50LWFtb3VudCk7XG4gICAgICB9XG5cbiAgICAgIGRsLFxuICAgICAgb2wsXG4gICAgICB1bCB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBUdXJuIG9mZiBtYXJnaW5zIG9uIG5lc3RlZCBsaXN0cy5cbiAgICAgICAqL1xuXG4gICAgICBvbCxcbiAgICAgIHVsIHtcbiAgICAgICAgb2wsXG4gICAgICAgIHVsIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZGQge1xuICAgICAgICBtYXJnaW46IDAgMCAwICRpbmRlbnQtYW1vdW50O1xuICAgICAgfVxuXG4gICAgICBvbCxcbiAgICAgIHVsIHtcbiAgICAgICAgcGFkZGluZzogMCAwIDAgJGluZGVudC1hbW91bnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBmaWdjYXB0aW9uLFxuICAgIGZpZ3VyZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gICAgICovXG5cbiAgICBmaWd1cmUge1xuICAgICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxICRpbmRlbnQtYW1vdW50KTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgbWFyZ2luOiAxZW0gJGluZGVudC1hbW91bnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAgICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAgICAgKi9cblxuICAgIGhyIHtcbiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gICAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gICAgICovXG5cbiAgICBtYWluIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAvKipcbiAgICAgICAqIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgKi9cblxuICAgICAgcCxcbiAgICAgIHByZSB7XG4gICAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIHByZSB7XG4gICAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgICAgIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShsaW5rcykge1xuICAgIC8qIExpbmtzXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAgICAgKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gICAgICovXG5cbiAgICBhIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gICAgICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZSh0ZXh0KSB7XG4gICAgLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny0gYW5kIEZpcmVmb3ggMzktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gICAgICovXG5cbiAgICBhYmJyW3RpdGxlXSB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gICAgICovXG5cbiAgICBiLFxuICAgIHN0cm9uZyB7XG4gICAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYixcbiAgICBzdHJvbmcge1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIGNvZGUsXG4gICAga2JkLFxuICAgIHNhbXAge1xuICAgICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gICAgICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAgICAgKi9cblxuICAgIGRmbiB7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICAgICAqL1xuXG4gICAgbWFyayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBzbWFsbCB7XG4gICAgICBmb250LXNpemU6IDgwJTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAgICAgKiBhbGwgYnJvd3NlcnMuXG4gICAgICovXG5cbiAgICBzdWIsXG4gICAgc3VwIHtcbiAgICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gICAgfVxuXG4gICAgc3ViIHtcbiAgICAgIGJvdHRvbTogLTAuMjVlbTtcbiAgICB9XG5cbiAgICBzdXAge1xuICAgICAgdG9wOiAtMC41ZW07XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShlbWJlZGRlZCkge1xuICAgIC8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gICAgICovXG5cbiAgICBhdWRpbyxcbiAgICB2aWRlbyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAgICAgKi9cblxuICAgIGF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgaW1nIHtcbiAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAgICAgKi9cblxuICAgIHN2Zzpub3QoOnJvb3QpIHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShmb3Jtcykge1xuICAgIC8qIEZvcm1zXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gICAgICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIGlucHV0LFxuICAgIG9wdGdyb3VwLFxuICAgIHNlbGVjdCxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LWZhbWlseTogaWYoJGJhc2UtZm9udC1mYW1pbHksICRiYXNlLWZvbnQtZmFtaWx5LCBzYW5zLXNlcmlmKTsgLyogMSAqL1xuICAgICAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gICAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xuICAgICAgICBsaW5lLWhlaWdodDogKCRiYXNlLWxpbmUtaGVpZ2h0IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAgICAgfVxuICAgICAgbWFyZ2luOiAwOyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gICAgICovXG5cbiAgICBidXR0b24ge1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gICAgICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIHNlbGVjdCB7IC8qIDEgKi9cbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICAgICAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICAgICAqL1xuXG4gICAgYnV0dG9uLFxuICAgIGh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbiAgICBbdHlwZT1cInJlc2V0XCJdLFxuICAgIFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gICAgfVxuXG4gICAgYnV0dG9uLFxuICAgIFt0eXBlPVwiYnV0dG9uXCJdLFxuICAgIFt0eXBlPVwicmVzZXRcIl0sXG4gICAgW3R5cGU9XCJzdWJtaXRcIl0ge1xuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gICAgICAgKi9cblxuICAgICAgJjo6LW1vei1mb2N1cy1pbm5lciB7XG4gICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gICAgICAgKi9cblxuICAgICAgJjotbW96LWZvY3VzcmluZyB7XG4gICAgICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICAgICAqL1xuXG4gICAgaW5wdXQge1xuICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICAgICAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gICAgICovXG5cbiAgICBbdHlwZT1cImNoZWNrYm94XCJdLFxuICAgIFt0eXBlPVwicmFkaW9cIl0ge1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICAgICAgcGFkZGluZzogMDsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAgICAgKi9cblxuICAgIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuICAgIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAgICAgKi9cblxuICAgIFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gICAgICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xuXG4gICAgICAvKipcbiAgICAgICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gICAgICAgKi9cblxuICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgICAgICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAgICAgKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gICAgICovXG5cbiAgICA6Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gICAgICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICAgICAqL1xuXG4gICAgZmllbGRzZXQge1xuICAgICAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gICAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICAgICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAgICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAgICAgKi9cblxuICAgIGxlZ2VuZCB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gICAgICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gICAgICBwYWRkaW5nOiAwOyAvKiAzICovXG4gICAgICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gICAgICovXG5cbiAgICBwcm9ncmVzcyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gICAgICovXG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICB9XG4gIH1cblxuICBAaWYgX25vcm1hbGl6ZS1pbmNsdWRlKGludGVyYWN0aXZlKSB7XG4gICAgLyogSW50ZXJhY3RpdmVcbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gICAgICovXG5cbiAgICBkZXRhaWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICAgICAqL1xuXG4gICAgc3VtbWFyeSB7XG4gICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAgICAgKi9cblxuICAgIG1lbnUge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG5cbiAgICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XG4gICAgICAgIC8qXG4gICAgICAgICAqIDEuIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW4uXG4gICAgICAgICAqIDIuIFNldCBjb25zaXN0ZW50IHNwYWNlIGZvciB0aGUgbGlzdCBzdHlsZSBpbWFnZS5cbiAgICAgICAgICovXG5cbiAgICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDApOyAvKiAxICovXG4gICAgICAgIHBhZGRpbmc6IDAgMCAwICRpbmRlbnQtYW1vdW50OyAvKiAyICovXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFR1cm4gb2ZmIG1hcmdpbnMgb24gbmVzdGVkIGxpc3RzLlxuICAgICAgICAgKi9cblxuICAgICAgICBtZW51ICYsXG4gICAgICAgIG9sICYsXG4gICAgICAgIHVsICYge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBpZiBfbm9ybWFsaXplLWluY2x1ZGUoc2NyaXB0aW5nKSB7XG4gICAgLyogU2NyaXB0aW5nXG4gICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAgIC8qKlxuICAgICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICAgICAqL1xuXG4gICAgY2FudmFzIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAgICAgKi9cblxuICAgIHRlbXBsYXRlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbiAgQGlmIF9ub3JtYWxpemUtaW5jbHVkZShoaWRkZW4pIHtcbiAgICAvKiBIaWRkZW5cbiAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICAgICAqL1xuXG4gICAgW2hpZGRlbl0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIFRBQkxFIE9GIENPTlRFTlRTIC0gTUlYSU5TXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogQmFzZSAoQm94U2l6aW5nLCBDbGVhcmZpeClcbiAqIEFjY2Vzc2liaWxpdHlcbiAqIFR5cG9ncmFwaHlcbiAqL1xuXG4vKioqKioqKiogQmFzZSAoQm94U2l6aW5nLCBDbGVhcmZpeCkgKioqKioqKioqL1xuLy8gQm94U2l6aW5nXG5AbWl4aW4gYm9yZGVyLWJveC1zaXppbmd7XG4gICoge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cbn1cblxuLy8gQ2xlYXJmaXhcbkBtaXhpbiBjbGVhcmZpeCB7XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi8qKioqKioqKiBBY2Nlc3NpYmlsaXR5ICoqKioqKioqKi9cbi8vIEhpZGUgb25seSB2aXN1YWxseSwgYnV0IGhhdmUgaXQgYXZhaWxhYmxlIGZvciBzY3JlZW5yZWFkZXJzOlxuLy8gaHR0cDovL3Nub29rLmNhL2FyY2hpdmVzL2h0bWxfYW5kX2Nzcy9oaWRpbmctY29udGVudC1mb3ItYWNjZXNzaWJpbGl0eVxuQG1peGluIHZpc3VhbGx5aGlkZGVuIHtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG5cbiAgLy8gRXh0ZW5kcyB0aGUgLnZpc3VhbGx5aGlkZGVuIGNsYXNzIHRvIGFsbG93IHRoZSBlbGVtZW50IHRvIGJlIGZvY3VzYWJsZVxuICAvLyB3aGVuIG5hdmlnYXRlZCB0byB2aWEgdGhlIGtleWJvYXJkOiBodHRwczovL3d3dy5kcnVwYWwub3JnL25vZGUvODk3NjM4XG4gICYuZm9jdXNhYmxlOmFjdGl2ZSxcbiAgJi5mb2N1c2FibGU6Zm9jdXMge1xuICAgIGNsaXA6IGF1dG87XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbjogMDtcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG59XG5cbi8qKioqKioqKiBUeXBvZ3JhcGh5ICoqKioqKioqKi9cbi8vIFRvIGNvbnZlcnQgYSBmb250LXNpemUgdmFsdWUgaW4gcGl4ZWxzIHRvIHJlbSBlcXVpdmFsZW50XG5AZnVuY3Rpb24gY2FsY3VsYXRlUmVtKCRzaXplKSB7XG4gICRyZW1TaXplOiAkc2l6ZSAvIDEwcHg7XG4gIEByZXR1cm4gI3skcmVtU2l6ZX1yZW07XG59XG4vLyBUbyBpbmNsdWRlIGEgZmFsbGJhY2sgaW4gcGl4ZWxzIGFuZCB0aGUgdmFsdWUgaW4gcmVtXG5AbWl4aW4gZm9udFNpemUoJHNpemUpIHtcbiAgZm9udC1zaXplOiAkc2l6ZTtcbiAgZm9udC1zaXplOiBjYWxjdWxhdGVSZW0oJHNpemUpO1xufVxuIiwiLyoqKioqKiBDT0xPUlMgKioqKioqL1xuXG4vLyBCYXNlXG4kYmFja2dyb3VuZDogI0YyRUVFRDtcbiR3aGl0ZTogI2ZmZjtcbiRibGFjazogIzAwMDtcbiRicmFuZGluZzogIzg0M0FGOTtcblxuLy8gR3JleVxuJGRhcmtlckdyZXk6ICMyNTI1MjU7XG4kZGFya0dyZXk6ICMzQzNDM0M7XG4kZ3JleTogIzlBOUE5QTtcblxuJGJvZHk6IHJnYmEoJGJsYWNrLCAwLjYpO1xuXG4vLyBCbHVlXG4kcGFsZUJsdWU6ICM1M0JDRkY7XG4kYmx1ZTogIzI1ODJGRjtcblxuLy8gU29jaWFsIGljb25zXG4kaWNvbkJhc2U6ICNBQkFCQUI7XG4kdHdpdHRlcjogIzAwQUFFQztcbiRkcmliYmJsZTogI0VDNDk4OTtcbiRnaXRodWI6ICMzRTc1QzM7XG4kaW5zdGFncmFtOiAjRUYzMDdDO1xuJGxpbmtlZGluOiAjMDA3RUJCO1xuJGNvZGVwZW46ICRibGFjaztcbiRtZWRpdW06ICMwMkI4NzU7XG4kYmVoYW5jZTogIzE3NjlGRjtcbiIsIi8qKioqKiogTUVESUEgUVVFUklFUyAqKioqKiovXG5cbiRtaW5XaWR0aFRhYmxldHRlOiA3NjhweDtcbiRtaW5XaWR0aFRhYmxlOiA5MDBweDtcbiRtcS1UYWJsZTogMTA4MHB4O1xuIiwiLyoqKioqKiBWQVJJQUJMRVMgKioqKioqL1xuXG4kZm9udDogTGFyc3NlaXQsICdMYXJzc2VpdCcsIEF2ZW5pciBOZXh0LCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcblxuJHBhZGRpbmdHZW5lcmFsOiAwIDEuNXJlbTtcblxuJHdpZHRoTGFyZ2U6IDEyODBweDsgLy8gbmF2XG4kd2lkdGhNZWRpdW06ICRtcS1UYWJsZTsgLy8gbWFpblxuJHdpZHRoU21hbGw6IDgwMHB4OyAvLyBhcnRpY2xlXG5cbi8vIFRyYW5zaXRpb25zXG4kdHJhbnNpdGlvblNsb3c6IGFsbCAwLjRzIGVhc2U7XG4kdHJhbnNpdGlvbk5vcm1hbDogYWxsIDAuMnMgZWFzZTtcblxuLy8gTWF4LXdpZHRoXG4kbWF4V2lkdGg6IDQ1MHB4O1xuJG1heFdpZHRoQnRuOiAzNTBweDtcblxuLy8gRm9udC1zaXplIHZhcmlhYmxlc1xuJGZvbnRTaXplU21hbGw6IDAuOTM3NXJlbTtcbiRmb250U2l6ZU5vcm1hbDogMXJlbTtcbiRmb250U2l6ZU1lZGl1bTogMS4xMjVyZW07XG4kZm9udFNpemVCaWc6IDEuMzEyNXJlbTtcbiRmb250U2l6ZUJpZ2dlcjogMS43NXJlbTtcbiIsImEuaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXNpemU6IDA7XG4gIGJhY2tncm91bmQ6IGNlbnRlciBuby1yZXBlYXQ7XG5cbiAgLy8gSGFtYnVyZ2VyXG4gICYtLWhhbWJ1cmdlciB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9pY29ucy9oYW1idXJnZXIuc3ZnKTtcbiAgfVxuXG4gIC8vIENsb3NlXG4gICYtLWNsb3NlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2ljb25zL2Nsb3NlLnN2Zyk7XG4gIH1cbn1cblxuc3ZnLmljb24ge1xuICBkaXNwbGF5OiBibG9jaztcblxuICAvLyBUd2l0dGVyXG4gICYtLXR3aXR0ZXI6aG92ZXIge1xuICAgIGZpbGw6ICR0d2l0dGVyO1xuICB9XG5cbiAgLy8gRHJpYmJibGVcbiAgJi0tZHJpYmJibGU6aG92ZXIge1xuICAgIGZpbGw6ICRkcmliYmJsZTtcbiAgfVxuXG4gIC8vIEdpdEh1YlxuICAmLS1naXRodWI6aG92ZXIge1xuICAgIGZpbGw6ICRnaXRodWI7XG4gIH1cblxuICAvLyBJbnN0YWdyYW1cbiAgJi0taW5zdGFncmFtOmhvdmVyIHtcbiAgICBmaWxsOiAkaW5zdGFncmFtO1xuICB9XG5cbiAgLy8gTGlua2VkSW5cbiAgJi0tbGlua2VkaW46aG92ZXIge1xuICAgIGZpbGw6ICRsaW5rZWRpbjtcbiAgfVxufVxuIiwiQGtleWZyYW1lcyBmYWRlLWluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjBweCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiBub25lO1xuICB9XG59XG5cbi5sb2FkQW5pbWF0ZWQge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGUtaW4gZWFzZSAwLjc1cztcbiAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIGFuaW1hdGlvbi1kZWxheTogMC4yNXM7XG59XG4iLCIvKioqKioqIFRZUE9HUkFQSFkgKioqKioqL1xuXG4vLyBSZWd1bGFyXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXJzc2VpdCc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuLy8gSXRhbGljXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXJzc2VpdCc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC1JdGFsaWMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gIHVybCgnLi4vZm9udHMvTGFyc3NlaXQvTGFyc3NlaXQtSXRhbGljLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBNZWRpdW0gKDUwMClcbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0xhcnNzZWl0JztcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL0xhcnNzZWl0L0xhcnNzZWl0LU1lZGl1bS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC1NZWRpdW0ud29mZicpIGZvcm1hdCgnd29mZicpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbi8vIEJvbGQgKGJvbGQpXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXJzc2VpdCc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC1Cb2xkLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxuICB1cmwoJy4uL2ZvbnRzL0xhcnNzZWl0L0xhcnNzZWl0LUJvbGQud29mZicpIGZvcm1hdCgnd29mZicpO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4vLyBFeHRyYS1Cb2xkICg4MDApXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdMYXJzc2VpdCc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9MYXJzc2VpdC9MYXJzc2VpdC1FeHRyYUJvbGQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXG4gIHVybCgnLi4vZm9udHMvTGFyc3NlaXQvTGFyc3NlaXQtRXh0cmFCb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuIiwiLyoqKioqKiBURVhUICoqKioqKi9cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRicmFuZGluZywgMTAlKTtcbn1cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRicmFuZGluZywgMTAlKTtcbn1cblxuLy8gVGl0bGVcbmgxLnRpdGxlIHtcbiAgZm9udC1zaXplOiAzLjVyZW07XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGxldHRlci1zcGFjaW5nOiAtMnB4O1xuICBjb2xvcjogJGJyYW5kaW5nO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpbmUtaGVpZ2h0OiAzLjhyZW07XG4gIGFuaW1hdGlvbi1kZWxheTogMC4yNXM7XG5cbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS10aXRsZSk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG9wYWNpdHk6IDAuMDc7XG4gICAgY29sb3I6ICRibGFjaztcbiAgICB6LWluZGV4OiAtMTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKDQwJSkgc2NhbGUoMS42KTtcbiAgfVxuXG4gIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgIGZvbnQtc2l6ZTogNS4zcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiA1LjVyZW07XG4gIH1cbn1cblxucC5zdWJIZWFkIHtcbiAgcGFkZGluZy1ib3R0b206IDJyZW07XG59XG5cbi8vIExJTktcbmEubGluayB7XG4gIGNvbG9yOiAkYnJhbmRpbmc7IC8vJGJsdWVcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG59XG5cbi8vIEZPTlQgU1RZTEVTXG4vLyBCb2xkXG5zdHJvbmcge1xuICBmb250LWZhbWlseTogJGZvbnQ7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi8vIEl0YWxpY1xuZW0ge1xuICBmb250LWZhbWlseTogJGZvbnQ7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLmhpZ2hsaWdodGVyLXJvdWdlIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcblxuICBwcmUge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgZm9udC1zaXplOiAxMDAlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjcsMzEsMzUsMC4wNSk7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuXG4gICAgY29kZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuXG4gICAgICAua2QsIC5vIHtcbiAgICAgICAgY29sb3I6ICNkNzNhNDk7XG4gICAgICB9XG4gICAgICAubngge1xuICAgICAgICBjb2xvcjogIzZmNDJjMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuY29kZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNGTW9uby1SZWd1bGFyXCIsQ29uc29sYXMsXCJMaWJlcmF0aW9uIE1vbm9cIixNZW5sbyxDb3VyaWVyLG1vbm9zcGFjZTtcbiAgcGFkZGluZzogMC4yZW0gMC40ZW07XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiA4NSU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjcsMzEsMzUsMC4wNSk7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxuLy8gUVVPVEVcbmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDJyZW0gMC4zNXJlbSAwO1xuXG4gIC8vIFF1b3RlXG4gIHAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgIGJveC1zaGFkb3c6IC0zcHggMCAwIDAgJGRhcmtlckdyZXk7XG4gIH1cbn1cblxuLy8gQXV0aG9yXG5wLnF1b3RlX19hdXRob3Ige1xuICBtYXJnaW46IDAgMC4zNXJlbSAycmVtO1xuICBhLmxpbmsge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIH1cbn1cbiIsIi8qKioqKiogQlVUVE9OUyAqKioqKiovXG5cbi5idXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMXJlbSAwO1xuICBtaW4td2lkdGg6IDI1MHB4O1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJGRhcmtlckdyZXk7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuOHB4O1xuICBmb250LWZhbWlseTogJGZvbnQ7XG4gIGJvcmRlcjogMDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBmbGV4LWdyb3c6IDE7XG4gIGZsZXgtYmFzaXM6IDQwJTsgLy93aGVuIDMgYnV0dG9uc1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG91dGxpbmU6IDA7XG4gIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uTm9ybWFsO1xuXG4gICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICY6YmVmb3JlIHtcbiAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkZGFya2VyR3JleTtcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAmOmFjdGl2ZSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk1KTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkZGFya2VyR3JleTtcbiAgICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRicmFuZGluZztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgei1pbmRleDogLTI7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC00cHgpIHRyYW5zbGF0ZVkoNHB4KTtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbk5vcm1hbDtcbiAgfVxufVxuXG4vLyBPbmx5IG9uIGxpbmtzXG5hLmJ1dHRvbiB7XG4gIC8vIFdoZW4gbW9yZSB0aGFuIDEgYnV0dG9uXG4gICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgfVxufVxuXG4vLyBGb3JtIGJ1dHRvblxuYnV0dG9uLmJ1dHRvbiB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59XG4iLCIvKioqKioqIEZPUk0gKioqKioqL1xuXG5mb3JtLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGZsZXgtd3JhcDogd3JhcDtcblxuICAvLyBMYWJlbFxuICBsYWJlbC5mb3JtX19sYWJlbCB7XG4gICAgQGluY2x1ZGUgdmlzdWFsbHloaWRkZW4oKTtcbiAgfVxuXG4gIC8vIElucHV0IENvbnRhaW5lclxuICBkaXYuaW5wdXRDb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgaW5wdXQuZm9ybV9faW5wdXQsIHRleHRhcmVhIHtcbiAgICAgICY6bnRoLW9mLXR5cGUoMSkge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNnJlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBJbnB1dFxuICBpbnB1dC5mb3JtX19pbnB1dCwgdGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYmFja2dyb3VuZDogcmdiYSgkYmxhY2ssIDAuMDUpO1xuICAgIGJvcmRlcjogMDtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC42cmVtO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbk5vcm1hbDtcblxuICAgICY6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZDogcmdiYSgkYmxhY2ssIDAuMSk7XG4gICAgfVxuICB9XG5cbiAgLy8gVGV4dGFyZWFcbiAgdGV4dGFyZWEge1xuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgfVxuXG4gIC8vIFBsYWNlaG9sZGVyXG4gIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIENocm9tZS9PcGVyYS9TYWZhcmkgKi9cbiAgICBjb2xvcjogcmdiYSgkYmxhY2ssIDAuNSk7XG4gIH1cbiAgOjotbW96LXBsYWNlaG9sZGVyIHsgLyogRmlyZWZveCAxOSsgKi9cbiAgICBjb2xvcjogcmdiYSgkYmxhY2ssIDAuNSk7XG4gIH1cbiAgOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIElFIDEwKyAqL1xuICAgIGNvbG9yOiByZ2JhKCRibGFjaywgMC41KTtcbiAgfVxuICA6LW1vei1wbGFjZWhvbGRlciB7IC8qIEZpcmVmb3ggMTgtICovXG4gICAgY29sb3I6IHJnYmEoJGJsYWNrLCAwLjUpO1xuICB9XG59XG4iLCIvKioqKioqIE5BViAqKioqKiovXG5cbm5hdi5uYXYge1xuICBwYWRkaW5nOiAxLjJyZW0gMDtcbiAgYm94LXNoYWRvdzogMCAxcHggMCAwIHJnYmEoJGJsYWNrLCAwLjA1KTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uTm9ybWFsO1xuXG4gIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgIHdpZHRoOiBhdXRvO1xuICB9XG5cbiAgLy8gTmF2IExpc3RcbiAgdWwubmF2X19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb25Ob3JtYWw7XG5cbiAgICAvLyBMYW5ndWFnZXNcbiAgICBkaXYubmF2X19sYW5ndWFnZXMge1xuICAgICAgLy8gTGlua3NcbiAgICAgIGEubmF2X19saW5rOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgICAgfVxuXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkbXEtVGFibGUpIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6IFwifFwiO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAubmF2X19pdGVtIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5uYXZfX2l0ZW1zIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBib3gtc2hhZG93OiAwIC0xcHggMCAwIHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gICAgICBwYWRkaW5nOiAxLjVyZW0gMCAwLjVyZW07XG4gICAgICBtYXJnaW4tdG9wOiAwLjVyZW07XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE5hdiBsaW5rXG4gICAgLm5hdl9fbGluayB7XG4gICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgIGNvbG9yOiAkZGFya2VyR3JleTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uTm9ybWFsO1xuXG4gICAgICBAbWVkaWEobWluLXdpZHRoOiAkbXEtVGFibGUpIHtcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgfVxuXG4gICAgICAmLS1sYW5nIHtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgIG91dGxpbmU6IDA7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgICYtLWFjdGl2ZSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgfVxuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLyoqKioqKiBIRUFERVIgKioqKioqL1xuXG5oZWFkZXIuaGVhZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRvcDogMDtcbiAgcGFkZGluZzogJHBhZGRpbmdHZW5lcmFsO1xuICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbk5vcm1hbDtcbiAgei1pbmRleDogOTk5O1xuICBwb3NpdGlvbjogZml4ZWQ7XG5cbiAgJi5oZWFkZXItLWluVHJhbnNpdGlvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuXG4gICAgZGl2LmhlYWRlckNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nOiAxcmVtIDA7XG4gICAgfVxuICB9XG5cbiAgLm1heFdpZHRoIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgfVxuICB9XG5cbiAgLy8gT1BFTkVEXG4gICYub3BlbmVkIHtcbiAgICBib3gtc2hhZG93OiAwIDEycHggMjVweCAwIHJnYmEoJGJsYWNrLCAwLjEpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcblxuICAgIGRpdi5oZWFkZXJDb250YWluZXIge1xuICAgICAgYm94LXNoYWRvdzogMCAxcHggMCAwIHJnYmEoJGJsYWNrLCAwLjA1KTtcbiAgICB9XG4gICAgbmF2Lm5hdiB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBwYWRkaW5nOiAxcmVtIDA7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuXG4gICAgICB1bC5uYXZfX2xpc3Qge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEhlYWRlciBDb250YWluZXJcbiAgZGl2LmhlYWRlckNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0cmFuc2l0aW9uOiAkdHJhbnNpdGlvbk5vcm1hbDtcbiAgICBwYWRkaW5nOiAxLjVyZW0gMDtcblxuICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBwYWRkaW5nOiAycmVtIDA7XG5cbiAgICAgIGEuaGVhZGVyX19hY3Rpb24ge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIExPR09cbiAgICBhLmhlYWRlcl9fbG9nbyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAkZGFya2VyR3JleTtcbiAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uTm9ybWFsO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgb3BhY2l0eTogMC41O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhlYWRlciBhY3Rpb25zXG4gICAgYS5oZWFkZXJfX2FjdGlvbiB7XG4gICAgICB3aWR0aDogMjJweDtcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICB9XG4gIH1cblxuICAvLyBCYXNpYyBzdHlsZXMgZm9yIG5hdlxuICBuYXYubmF2IHtcbiAgICBoZWlnaHQ6IDA7XG4gICAgcGFkZGluZzogMCAxcmVtO1xuXG4gICAgdWwubmF2X19saXN0IHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgYm94LXNoYWRvdzogbm9uZTtcblxuICAgICAgdWwubmF2X19saXN0IHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgIH1cblxuICAgICAgbGkubmF2X19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLyoqKioqKiBGT09URVIgKioqKioqL1xuXG5mb290ZXIuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIC8vcG9zaXRpb246IHJlbGF0aXZlO1xuICAvL2JvdHRvbTogMDtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgcGFkZGluZzogJHBhZGRpbmdHZW5lcmFsO1xuXG4gIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgbGkuc29jaWFsX19pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgICB9XG4gIH1cblxuICAvLyBTb2NpYWwgaWNvbnNcbiAgdWwuc29jaWFsX19saXN0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBwYWRkaW5nOiAxLjJyZW0gMDtcbiAgICBib3gtc2hhZG93OiAwIDFweCAwIDAgcmdiYSgkYmxhY2ssIDAuMDUpO1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG5cbiAgICBhLnNvY2lhbF9fbGluayB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgZmlsbDogJGljb25CYXNlO1xuXG4gICAgICAvLyBJY29uXG4gICAgICBzdmcuaWNvbiB7XG4gICAgICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9uU2xvdztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAubWF4V2lkdGgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgICB9XG4gIH1cblxuICAvLyBTbWFsbFxuICBzbWFsbC5mb290ZXJfX2NvcHlyaWdodCB7XG4gICAgcGFkZGluZzogMS4ycmVtIDA7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxufVxuIiwiLyoqKioqKiBMaXN0ICoqKioqKi9cblxuLy8gTGlzdFxudWwubGlzdCB7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC8vIEl0ZW1cbiAgbGkubGlzdF9faXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICAvLyBJbmZvc1xuICAgIGRpdi5pdGVtX19pbmZvIHtcbiAgICAgIGFuaW1hdGlvbi1kZWxheTogMC41cztcblxuICAgICAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgICAgIHdpZHRoOiA1MCU7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMTA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgfVxuXG4gICAgICAvLyBUSVRMRVxuICAgICAgaDIuaXRlbV9fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgICAgICAgbWFyZ2luOiAycmVtIDAgMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIuNXJlbTtcblxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiAkbXEtVGFibGUpIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgZm9udC1zaXplOiAzLjI1cmVtO1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAzLjI1cmVtO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEJPRFlcbiAgICAgIHAuaXRlbV9fYm9keSB7XG4gICAgICAgIGNvbG9yOiAkYm9keTtcbiAgICAgICAgbWFyZ2luOiAxLjVyZW0gMCAycmVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS45cmVtO1xuXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgICAgIG1hcmdpbjogMnJlbSAwIDIuNXJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBBY3Rpb25zXG4gICAgICBkaXYuYWN0aW9ucyB7XG5cbiAgICAgICAgZGl2LmxhYmVsQ29udGFpbmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcblxuICAgICAgICAgIC8vIExhYmVsXG4gICAgICAgICAgbGFiZWwuYWN0aW9ucy0tbGFiZWwge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgICAgICBjb2xvcjogJGRhcmtlckdyZXk7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gU2VwYXJhdG9yXG4gICAgICAgICAgZGl2LmxhYmVsX19zZXBhcmF0b3Ige1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrZXJHcmV5O1xuICAgICAgICAgICAgb3BhY2l0eTogMC44O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEJ1dHRvbnNcbiAgICAgICAgZGl2LmJ1dHRvbkNvbnRhaW5lciB7XG4gICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSW1hZ2VcbiAgICBwaWN0dXJlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICBpbWcuaXRlbV9faW1hZ2Uge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDogJG1xLVRhYmxlKSB7XG4gICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDaGFuZ2Ugb3JkZXJcbiAgICAmOm50aC1jaGlsZChldmVuKSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuXG4gICAgICAgIGRpdi5pdGVtX19pbmZvIHtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3BhY2UgYmV0d2VlbiBsaXN0c1xuICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgcGFkZGluZy10b3A6IDRyZW07XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgICBwYWRkaW5nLXRvcDogNnJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBMYXN0IGxpc3Qgc3BhY2UgYWZ0ZXJcbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgcGFkZGluZy1ib3R0b206IDRyZW07XG5cbiAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRtcS1UYWJsZSkge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNnJlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8qKioqKiogQUJPVVQgTUUgKioqKioqL1xuXG4vLyBJbWFnZVxuaW1nLmFib3V0X19pbWFnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxudWwucHJvamVjdHNfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcblxuICBsaSB7XG4gICAgd2lkdGg6IDI1JTtcblxuICAgIGltZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qKioqKiogV09SSyAqKioqKiovXG5cbmFydGljbGUud29ya19fYXJ0aWNsZSB7XG4gIC8vIEhlYWRlclxuICAud29ya19faGVhZGVyIHtcbiAgICAvLyBJbWFnZVxuICAgIC5iYW5uZXIge1xuICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICB9XG4gIH1cblxuICAvLyBUaXRsZVxuICBoMS50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICB9XG5cbiAgLy8gSW1hZ2VcbiAgc2VjdGlvbiBpbWcge1xuICAgIG1hcmdpbjogMnJlbSAwO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTJCRztBQUVILG1CQUFtQjtBQUduQix5QkFBeUI7QUtoQ3pCOzs7Ozs7O0dBT0c7QUFFSCwrQ0FBK0M7QUFpQi9DLGtDQUFrQztBQTBCbEMsK0JBQStCO0FDcEQvQixzQkFBc0I7QUNBdEIsNkJBQTZCO0FDQTdCLHlCQUF5QjtBQ0F6QixBQUFBLENBQUMsQUFBQSxLQUFLLENBQUM7RUFDTCxPQUFPLEVBQUUsS0FBSztFQUNkLFNBQVMsRUFBRSxDQUFDO0VBQ1osVUFBVSxFQUFFLGdCQUFnQjtDQVc3Qjs7QUFkRCxBQU1FLENBTkQsQUFNQyxnQkFBWSxDQUFDO0VBQ1gsZ0JBQWdCLEVBQUUsa0NBQWtDO0NBQ3JEOztBQVJILEFBV0UsQ0FYRCxBQVdDLFlBQVEsQ0FBQztFQUNQLGdCQUFnQixFQUFFLDhCQUE4QjtDQUNqRDs7QUFHSCxBQUFBLEdBQUcsQUFBQSxLQUFLLENBQUM7RUFDUCxPQUFPLEVBQUUsS0FBSztDQTBCZjs7QUEzQkQsQUFJRSxHQUpDLEFB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 */
